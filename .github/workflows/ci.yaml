name: ♟️ CI

on:
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize]

jobs:
  # Check linting and formatting
  check-style:
    name: 🥼 check-style / 🐧 ubuntu
    runs-on: ubuntu-latest
    steps:
      # Setup
      - name: 🛒 Checkout repo
        uses: actions/checkout@v4
      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: 🛠️ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements-style.txt
      # Format
      - name: 🧹 Check format (ruff)
        run: |
          ruff format --check
      # Lint
      - name: ✨ Check lint (ruff)
        run: |
          ruff check

  # Run static type checking
  check-types:
    name: ⌨️ check-types / 🐧 ubuntu
    runs-on: ubuntu-latest
    steps:
      # Setup
      - name: 🛒 Checkout repo
        uses: actions/checkout@v4
      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: 🛠️ Install dependencies (python)
        # Currently no dependencies ...
        run: |
          python -m pip install --upgrade pip
      # Setup node.js
      - name: 🐸 Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: 📦 Install dependencies (node.js)
        run: |
          npm install -g pyright
      # Type check
      - name: 🗿 Type check with pyright
        run: |
          pyright --verbose

  # Run tests on mac, windows, and ubuntu
  check-tests:
    name: 🧪 check-tests / ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { name: 🖼️ windows, os: windows-latest, python-version: "3.11" }
          - { name: 🐧 ubuntu, os: ubuntu-latest, python-version: "3.11" }
    steps:
      # Setup
      - name: 🛒 Checkout repo
        uses: actions/checkout@v4
      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      # Currently no dependencies ...
      - name: 🛠️ Install dependencies
        run: |
          python -m pip install --upgrade pip
      # Run tests
      - name: ⚗️ Run unit tests
        run: |
          python -m unittest discover -v -s tests -p test_*.py

  # Run coverage and generate artifacts
  generate-coverage:
    name: 🔬 generate-coverage / 🐧 ubuntu
    runs-on: ubuntu-latest
    steps:
      # Setup
      - name: 🛒 Checkout repo
        uses: actions/checkout@v4
      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: 🛠️ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements-coverage.txt
      # Run tests with coverage
      - name: ☂️ Run unittest with coverage
        run: |
          coverage run
      # Coverage xml
      - name: 📜 Generate coverage xml
        run: |
          coverage xml
        # Comment about code coverage on PRs
      - name: 🐒 Comment coverage on PR
        if: ${{ github.event_name == 'pull_request' }}
        # Use an old version to avoid adding a check to the workflow
        uses: 5monkeys/cobertura-action@v9
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          path: coverage.xml
          skip_covered: false
          minimum_coverage: 80
          show_line: true
          show_branch: true
          show_missing: true
      # Coverage html
      - name: 📊 Generate coverage html
        run: |
          coverage html
      # Upload coverage artifacts
      - name: 🤳 Upload coverage html
        uses: actions/upload-artifact@v4
        with:
          name: htmlcov
          path: |
            htmlcov/*
